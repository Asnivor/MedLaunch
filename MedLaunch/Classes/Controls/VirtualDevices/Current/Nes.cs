using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MedLaunch.Classes.Controls.VirtualDevices
{
    public class Nes : VirtualDeviceBase
    {
        public static DeviceDefinition GamePad(int VirtualPort)
        {
            DeviceDefinition device = new DeviceDefinition();
            device.DeviceName = "NES GamePad";
            device.ControllerName = "gamepad";
            device.CommandStart = "nes.input.port" + VirtualPort;
            device.VirtualPort = VirtualPort;
            device.MapList = new List<Mapping>
            {
                /* MapList is now autogenerated from mednafen.cfg */
            };

            DeviceDefinition.ParseOptionsFromConfig(device);

            DeviceDefinition.PopulateConfig(device);
            return device;
        }

        public static DeviceDefinition Zapper(int VirtualPort)
        {
            DeviceDefinition device = new DeviceDefinition();
            device.DeviceName = "NES Zapper";
            device.ControllerName = "zapper";
            device.CommandStart = "nes.input.port" + VirtualPort;
            device.VirtualPort = VirtualPort;
            device.MapList = new List<Mapping>
            {
                /* MapList is now autogenerated from mednafen.cfg */
            };

            DeviceDefinition.ParseOptionsFromConfig(device);

            DeviceDefinition.PopulateConfig(device);
            return device;
        }

        public static DeviceDefinition PowerPadA(int VirtualPort)
        {
            DeviceDefinition device = new DeviceDefinition();
            device.DeviceName = "NES Power Pad Side A";
            device.ControllerName = "powerpada";
            device.CommandStart = "nes.input.port" + VirtualPort;
            device.VirtualPort = VirtualPort;
            device.MapList = new List<Mapping>
            {
                /* MapList is now autogenerated from mednafen.cfg */
            };

            DeviceDefinition.ParseOptionsFromConfig(device);

            DeviceDefinition.PopulateConfig(device);
            return device;
        }

        public static DeviceDefinition PowerPadB(int VirtualPort)
        {
            DeviceDefinition device = new DeviceDefinition();
            device.DeviceName = "NES Power Pad Side B";
            device.ControllerName = "powerpadb";
            device.CommandStart = "nes.input.port" + VirtualPort;
            device.VirtualPort = VirtualPort;
            device.MapList = new List<Mapping>
            {
                /* MapList is now autogenerated from mednafen.cfg */
            };

            DeviceDefinition.ParseOptionsFromConfig(device);

            DeviceDefinition.PopulateConfig(device);
            return device;
        }

        public static DeviceDefinition ArkanoidPaddle(int VirtualPort)
        {
            DeviceDefinition device = new DeviceDefinition();
            if (VirtualPort == 666)            {
                
                device.CommandStart = "nes.input.fcexp"; // + VirtualPort;
            }
            else
            {
                device.CommandStart = "nes.input.port" + VirtualPort;
            }
            device.DeviceName = "NES Arkanoid Paddle";
            device.ControllerName = "arkanoid";
            device.VirtualPort = VirtualPort;
            device.MapList = new List<Mapping>
            {
                /* MapList is now autogenerated from mednafen.cfg */
            };

            DeviceDefinition.ParseOptionsFromConfig(device);

            DeviceDefinition.PopulateConfig(device);
            return device;
        }

        public static DeviceDefinition FamilyKeyboard(int VirtualPort)
        {
            DeviceDefinition device = new DeviceDefinition();
            if (VirtualPort == 666)
            {                
                device.CommandStart = "nes.input.fcexp"; // + VirtualPort;
            }
            else
            {
                device.CommandStart = "nes.input.port" + VirtualPort;
            }
            device.DeviceName = "NES Family Keyboard";
            device.ControllerName = "fkb";
            device.VirtualPort = VirtualPort;
            device.MapList = new List<Mapping>
            {
                /* MapList is now autogenerated from mednafen.cfg */
            };

            DeviceDefinition.ParseOptionsFromConfig(device);

            DeviceDefinition.PopulateConfig(device);
            return device;
        }

        public static DeviceDefinition FamilyTrainerA(int VirtualPort)
        {
            DeviceDefinition device = new DeviceDefinition();
            if (VirtualPort == 666)
            {
                device.CommandStart = "nes.input.fcexp"; // + VirtualPort;
            }
            else
            {
                device.CommandStart = "nes.input.port" + VirtualPort;
            }
            device.DeviceName = "NES Family Trainer Side A";
            device.ControllerName = "ftrainera";
            device.VirtualPort = VirtualPort;
            device.MapList = new List<Mapping>
            {
                /* MapList is now autogenerated from mednafen.cfg */
            };

            DeviceDefinition.ParseOptionsFromConfig(device);

            DeviceDefinition.PopulateConfig(device);
            return device;
        }

        public static DeviceDefinition FamilyTrainerB(int VirtualPort)
        {
            DeviceDefinition device = new DeviceDefinition();
            if (VirtualPort == 666)
            {
                device.CommandStart = "nes.input.fcexp"; // + VirtualPort;
            }
            else
            {
                device.CommandStart = "nes.input.port" + VirtualPort;
            }
            device.DeviceName = "NES Family Trainer Side B";
            device.ControllerName = "ftrainerb";
            device.VirtualPort = VirtualPort;
            device.MapList = new List<Mapping>
            {
                /* MapList is now autogenerated from mednafen.cfg */
            };

            DeviceDefinition.ParseOptionsFromConfig(device);

            DeviceDefinition.PopulateConfig(device);
            return device;
        }

        public static DeviceDefinition HyperShot(int VirtualPort)
        {
            DeviceDefinition device = new DeviceDefinition();
            if (VirtualPort == 666)
            {
                device.CommandStart = "nes.input.fcexp"; // + VirtualPort;
            }
            else
            {
                device.CommandStart = "nes.input.port" + VirtualPort;
            }
            device.DeviceName = "NES HyperShot";
            device.ControllerName = "hypershot";
            device.VirtualPort = VirtualPort;
            device.MapList = new List<Mapping>
            {
                /* MapList is now autogenerated from mednafen.cfg */
            };

            DeviceDefinition.ParseOptionsFromConfig(device);

            DeviceDefinition.PopulateConfig(device);
            return device;
        }


        public static DeviceDefinition Mahjong(int VirtualPort)
        {
            DeviceDefinition device = new DeviceDefinition();
            if (VirtualPort == 666)
            {
                device.CommandStart = "nes.input.fcexp"; // + VirtualPort;
            }
            else
            {
                device.CommandStart = "nes.input.port" + VirtualPort;
            }
            device.DeviceName = "NES Mahjong";
            device.ControllerName = "mahjong";
            device.VirtualPort = VirtualPort;
            device.MapList = new List<Mapping>
            {
                /* MapList is now autogenerated from mednafen.cfg */
            };

            DeviceDefinition.ParseOptionsFromConfig(device);

            DeviceDefinition.PopulateConfig(device);
            return device;
        }

        public static DeviceDefinition OekaKids(int VirtualPort)
        {
            DeviceDefinition device = new DeviceDefinition();
            if (VirtualPort == 666)
            {
                device.CommandStart = "nes.input.fcexp"; // + VirtualPort;
            }
            else
            {
                device.CommandStart = "nes.input.port" + VirtualPort;
            }
            device.DeviceName = "NES Oeka Kids Tablet";
            device.ControllerName = "oekakids";
            device.VirtualPort = VirtualPort;
            device.MapList = new List<Mapping>
            {
                /* MapList is now autogenerated from mednafen.cfg */
            };

            DeviceDefinition.ParseOptionsFromConfig(device);

            DeviceDefinition.PopulateConfig(device);
            return device;
        }

        public static DeviceDefinition PartyTap(int VirtualPort)
        {
            DeviceDefinition device = new DeviceDefinition();
            if (VirtualPort == 666)
            {
                device.CommandStart = "nes.input.fcexp"; // + VirtualPort;
            }
            else
            {
                device.CommandStart = "nes.input.port" + VirtualPort;
            }
            device.DeviceName = "NES Party Tap";
            device.ControllerName = "partytap";
            device.VirtualPort = VirtualPort;
            device.MapList = new List<Mapping>
            {
                /* MapList is now autogenerated from mednafen.cfg */
            };

            DeviceDefinition.ParseOptionsFromConfig(device);

            DeviceDefinition.PopulateConfig(device);
            return device;
        }

        public static DeviceDefinition SpaceShadow(int VirtualPort)
        {
            DeviceDefinition device = new DeviceDefinition();
            if (VirtualPort == 666)
            {
                device.CommandStart = "nes.input.fcexp"; // + VirtualPort;
            }
            else
            {
                device.CommandStart = "nes.input.port" + VirtualPort;
            }
            device.DeviceName = "NES Space Shadow Gun";
            device.ControllerName = "shadow";
            device.VirtualPort = VirtualPort;
            device.MapList = new List<Mapping>
            {
                /* MapList is now autogenerated from mednafen.cfg */
            };

            DeviceDefinition.ParseOptionsFromConfig(device);

            DeviceDefinition.PopulateConfig(device);
            return device;
        }

    }

    
}
